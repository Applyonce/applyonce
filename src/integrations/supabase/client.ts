
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://adncztqbllxpnowasxwo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkbmN6dHFibGx4cG5vd2FzeHdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQwMzQ5ODksImV4cCI6MjA1OTYxMDk4OX0.R2holNq9GTuiNbz4hSCUYSGqO_zwAT_VDg_GqOK7nws";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Define reusable types for use throughout the application
export type Category = Database['public']['Tables']['categories']['Row'];
export type Opportunity = Database['public']['Tables']['opportunities']['Row'];
export type Profile = Database['public']['Tables']['profiles']['Row'];

// Define additional types for our form builder functionality
export type CategoryField = Database['public']['Tables']['category_fields']['Row'];
export type OpportunityField = Database['public']['Tables']['opportunity_fields']['Row'];

// Define Application type to match the database schema
export type Application = Database['public']['Tables']['applications']['Row'];

// Define field types for form builder
export type FieldType = 'text' | 'textarea' | 'number' | 'select' | 'checkbox' | 'date' | 'file' | 'url';

// Add Role type
export type UserRole = 'user' | 'admin' | 'company';

// Helper function to check if user is authenticated
export const isAuthenticated = async () => {
  const { data } = await supabase.auth.getSession();
  return !!data.session;
};

// Helper function to get current user
export const getCurrentUser = async () => {
  const { data } = await supabase.auth.getUser();
  return data?.user || null;
};

// Helper function to get user profile with role
export const getUserProfile = async () => {
  const { data: user } = await supabase.auth.getUser();
  
  if (!user.user) return null;
  
  const { data: profile } = await supabase
    .from('profiles')
    .select('*')
    .eq('id', user.user.id)
    .single();
    
  return profile;
};
